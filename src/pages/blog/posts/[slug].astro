---
import { getCollection, render } from "astro:content";
import BlogLayout from "../../../layouts/BlogLayout.astro";
import { Icon } from "astro-icon/components";
import EntryNav from "../../../components/blog/EntryNav.astro";

export async function getStaticPaths() {
  const blog = await getCollection("posts");
  return blog.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content, remarkPluginFrontmatter } = await render(post);
---

<BlogLayout pageTitle={post.data.title} description={post.data.description}>
  <h1>Blog</h1>
  <div
    class="prose mx-auto mb-5 w-[95vw] max-w-none rounded-3xl bg-crust p-4 min-[860px]:max-w-prose"
  >
    <div class="border-b-2 border-dashed border-base">
      <div
        class="mb-4 flex flex-wrap items-center gap-x-3 gap-y-2 text-subtext0"
      >
        <div class="m-0 w-fit rounded bg-surface0 p-2">
          <Icon name="lucide:align-left" />
        </div>
        {
          remarkPluginFrontmatter.words === 1
            ? remarkPluginFrontmatter.words + " word"
            : remarkPluginFrontmatter.words + " words"
        }
        <div class="m-0 w-fit rounded bg-surface0 p-2">
          <Icon name="lucide:clock-3" />
        </div>
        {
          remarkPluginFrontmatter.minutes === 1
            ? remarkPluginFrontmatter.minutes + " minute"
            : remarkPluginFrontmatter.minutes + " minutes"
        }
      </div>

      <h1 class="mb-4 mt-0">{post.data.title}</h1>

      <div class="mb-4 flex flex-wrap items-center gap-x-4 gap-y-2">
        <div class="m-0 w-fit rounded bg-surface0 p-2 text-teal">
          <Icon name="lucide:calendar" class="text-lg" />
        </div>
        {
          post.data.published.toLocaleDateString("en-us", {
            year: "numeric",
            month: "short",
            day: "numeric",
          })
        }

        {
          post.data.updated &&
            (<div class="m-0 w-fit rounded bg-surface0 p-2">
              <Icon name="lucide:calendar-clock" class="text-lg text-sky" />
            </div>)(post.data.updated).toLocaleDateString("en-us", {
              year: "numeric",
              month: "short",
              day: "numeric",
            })
        }

        <div class="m-0 w-fit rounded bg-surface0 p-2">
          <Icon name="lucide:book-marked" class="text-lg text-mauve" />
        </div>
        <div class="flex flex-row flex-nowrap items-center">
          {
            post.data.category && post.data.category.length > 0 ? (
              post.data.category.map((cat, i) => (
                <div class="!inline-flex items-center">
                  <div
                    class:list={[
                      { hidden: i == 0 },
                      "mx-1.5 text-sm text-surface2",
                    ]}
                  >
                    /
                  </div>
                  <a
                    href={`/blog/categories/${cat}`}
                    class="whitespace-nowrap rounded-md p-1 no-underline hover:bg-surface0"
                  >
                    {cat}
                  </a>
                </div>
              ))
            ) : (
              <div class="text-50 text-sm font-medium" />
            )
          }
        </div>

        <div class="mt-1 w-fit rounded bg-surface0 p-2">
          <Icon name="lucide:hash" class="text-lg text-flamingo" />
        </div>
        <div class="flex flex-row flex-nowrap items-center">
          {
            post.data.tags && post.data.tags.length > 0
              ? post.data.tags.map((tag, i) => (
                  <div class="!inline-flex items-center">
                    <div
                      class:list={[
                        { hidden: i == 0 },
                        "mx-1.5 text-sm text-surface2",
                      ]}
                    >
                      /
                    </div>
                    <a
                      href={`/blog/tags/${tag}`}
                      class="whitespace-nowrap rounded-md p-1 no-underline hover:bg-surface0"
                    >
                      {tag}
                    </a>
                  </div>
                ))
              : !(post.data.tags && post.data.tags.length > 0) && (
                  <div class="text-50 text-sm font-medium" />
                )
          }
        </div>
      </div>
    </div>
    <Content />
  </div>
  <EntryNav />
</BlogLayout>
