---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import type { ImageMetadata } from "astro";
import type { SocialsSchema } from "@fujocoded/zod-transform-socials";
import { Icon } from "astro-icon/components";

interface Props {
  title: string;
  description: string;
  status: string;
  links: SocialsSchema;
  categories: string[];
  tags: string[];
  image: ImageMetadata;
}

const allProjects = await getCollection("projects");
---

<Layout>
  <h1>Projects</h1>

  {
    allProjects.map((project) => (
      <div class="mb-5 rounded border border-overlay2 bg-crust p-4">
        <div class="flex items-start gap-6">
          <h2 class="mb-2 mt-0 pt-0">{project.data.title}</h2>
          <div class="rounded border px-2 py-1 text-sm">
            {project.data.status}
          </div>
        </div>
        <div class="grid-rows-auto grid grid-cols-2">
          <ul
            class:list={{ hidden: project.data.links.length == 0 }}
            class="m-0 flex items-center gap-2 p-0"
          >
            {project.data.links.map((link) => (
              <li class="my-[-10px] w-fit list-none rounded-full border border-blue p-2 hover:border-transparent">
                <a href={link.url}>
                  {link.icon ? (
                    <>
                      <Icon name={link.icon} />
                    </>
                  ) : (
                    <>
                      <Icon name={"lucide:home"} />
                    </>
                  )}
                </a>
              </li>
            ))}
          </ul>
          <div
            class:list={{ hidden: project.data.categories.length == 0 }}
            class="flex items-center gap-1"
          >
            <div class="m-0 w-fit rounded bg-overlay0 p-2">
              <Icon name="lucide:book-marked" class="text-lg" />
            </div>

            <ul class="m-0 inline list-none p-0">
              {project.data.categories.map((category, index) => (
                <li class="inline-block w-fit text-wrap break-words">
                  {index - (project.data.categories.length - 1)
                    ? category + ",\xa0"
                    : category}
                </li>
              ))}
            </ul>
          </div>
        </div>
        <p class="my-2 italic">{project.data.description}</p>
        <div
          class:list={{ hidden: project.data.tags.length == 0 }}
          class="flex items-center gap-2"
        >
          <div class="mt-1 w-fit rounded bg-overlay0 p-2">
            <Icon name="lucide:hash" class="text-lg" />
          </div>

          <ul class="m-0 mt-1 inline list-none p-0">
            {project.data.tags.map((tag, index) => (
              <li class="inline-block w-fit text-wrap break-words">
                {index - (project.data.tags.length - 1) ? tag + ",\xa0" : tag}
              </li>
            ))}
          </ul>
        </div>
      </div>
    ))
  }
</Layout>
